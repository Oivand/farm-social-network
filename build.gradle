plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1' // <-- ИЗМЕНЕНО: Стабильная версия Spring Boot
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Добавленные зависимости для Spring Security и JWT
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// <-- ИЗМЕНЕНО: Обновленные версии JJWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'org.springframework.boot:spring-boot-docker-compose'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
}

tasks.named('test') {
	useJUnitPlatform()
}